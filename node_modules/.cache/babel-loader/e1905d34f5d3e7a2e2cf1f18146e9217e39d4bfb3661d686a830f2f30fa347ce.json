{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst API_BASE_URL = 'http://localhost:5001/api';\n\n// Helper function to make API requests\nconst apiRequest = async (endpoint, options = {}) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers\n    },\n    ...options\n  };\n  const response = await fetch(`${API_BASE_URL}${endpoint}`, config);\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || 'API request failed');\n  }\n  return data;\n};\n\n// Async thunks for authentication\nexport const registerUser = createAsyncThunk('auth/register', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await apiRequest('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(userData)\n    });\n\n    // Store token in localStorage\n    localStorage.setItem('token', response.token);\n    localStorage.setItem('user', JSON.stringify(response.user));\n    return response;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const loginUser = createAsyncThunk('auth/login', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await apiRequest('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials)\n    });\n\n    // Store token in localStorage\n    localStorage.setItem('token', response.token);\n    localStorage.setItem('user', JSON.stringify(response.user));\n    return response;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const logoutUser = createAsyncThunk('auth/logout', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    // Clear localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    return null;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const getCurrentUser = createAsyncThunk('auth/getCurrentUser', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No token found');\n    }\n    const response = await apiRequest('/auth/me', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.user;\n  } catch (error) {\n    // If token is invalid, clear localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    return rejectWithValue(error.message);\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: JSON.parse(localStorage.getItem('user')) || null,\n    token: localStorage.getItem('token') || null,\n    isAuthenticated: !!localStorage.getItem('token'),\n    loading: false,\n    error: null\n  },\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Register\n    .addCase(registerUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isAuthenticated = true;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Login\n    .addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isAuthenticated = true;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Logout\n    .addCase(logoutUser.fulfilled, state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n    })\n    // Get current user\n    .addCase(getCurrentUser.pending, state => {\n      state.loading = true;\n    }).addCase(getCurrentUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n      state.isAuthenticated = true;\n    }).addCase(getCurrentUser.rejected, (state, action) => {\n      state.loading = false;\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  clearError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","API_BASE_URL","apiRequest","endpoint","options","config","headers","response","fetch","data","json","ok","Error","message","registerUser","userData","rejectWithValue","method","body","JSON","stringify","localStorage","setItem","token","user","error","loginUser","credentials","logoutUser","_","removeItem","getCurrentUser","getItem","Authorization","authSlice","name","initialState","parse","isAuthenticated","loading","reducers","clearError","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/palimaracharan/Desktop/Habits_Tracker/src/store/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst API_BASE_URL = 'http://localhost:5001/api';\n\n// Helper function to make API requests\nconst apiRequest = async (endpoint, options = {}) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers,\n    },\n    ...options,\n  };\n\n  const response = await fetch(`${API_BASE_URL}${endpoint}`, config);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'API request failed');\n  }\n\n  return data;\n};\n\n// Async thunks for authentication\nexport const registerUser = createAsyncThunk(\n  'auth/register',\n  async (userData, { rejectWithValue }) => {\n    try {\n      const response = await apiRequest('/auth/register', {\n        method: 'POST',\n        body: JSON.stringify(userData),\n      });\n      \n      // Store token in localStorage\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      \n      return response;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const loginUser = createAsyncThunk(\n  'auth/login',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const response = await apiRequest('/auth/login', {\n        method: 'POST',\n        body: JSON.stringify(credentials),\n      });\n      \n      // Store token in localStorage\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      \n      return response;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const logoutUser = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      // Clear localStorage\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      return null;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const getCurrentUser = createAsyncThunk(\n  'auth/getCurrentUser',\n  async (_, { rejectWithValue }) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n\n      const response = await apiRequest('/auth/me', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      \n      return response.user;\n    } catch (error) {\n      // If token is invalid, clear localStorage\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: JSON.parse(localStorage.getItem('user')) || null,\n    token: localStorage.getItem('token') || null,\n    isAuthenticated: !!localStorage.getItem('token'),\n    loading: false,\n    error: null,\n  },\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Register\n      .addCase(registerUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(registerUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n        state.isAuthenticated = true;\n      })\n      .addCase(registerUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      // Login\n      .addCase(loginUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n        state.isAuthenticated = true;\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      // Logout\n      .addCase(logoutUser.fulfilled, (state) => {\n        state.user = null;\n        state.token = null;\n        state.isAuthenticated = false;\n      })\n      // Get current user\n      .addCase(getCurrentUser.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(getCurrentUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload;\n        state.isAuthenticated = true;\n      })\n      .addCase(getCurrentUser.rejected, (state, action) => {\n        state.loading = false;\n        state.user = null;\n        state.token = null;\n        state.isAuthenticated = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { clearError } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}