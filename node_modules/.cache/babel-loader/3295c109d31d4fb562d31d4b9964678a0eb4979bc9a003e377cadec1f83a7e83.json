{"ast":null,"code":"var _jsxFileName = \"/Users/palimaracharan/Desktop/Habits_Tracker/src/context/HabitContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { saveHabitsToStorage, loadHabitsFromStorage } from '../utils/storage';\nimport { calculateStreak } from '../utils/dateUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst habitReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_HABIT':\n      return [...state, action.payload];\n    case 'UPDATE_HABIT':\n      return state.map(habit => habit.id === action.payload.id ? {\n        ...habit,\n        ...action.payload.habit\n      } : habit);\n    case 'DELETE_HABIT':\n      return state.filter(habit => habit.id !== action.payload);\n    case 'TOGGLE_COMPLETION':\n      return state.map(habit => {\n        if (habit.id === action.payload.id) {\n          const completedDates = habit.completedDates.includes(action.payload.date) ? habit.completedDates.filter(date => date !== action.payload.date) : [...habit.completedDates, action.payload.date];\n          const streak = calculateStreak(completedDates);\n          const longestStreak = Math.max(habit.longestStreak, streak);\n          return {\n            ...habit,\n            completedDates,\n            streak,\n            longestStreak\n          };\n        }\n        return habit;\n      });\n    case 'LOAD_HABITS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\nconst HabitContext = /*#__PURE__*/createContext(undefined);\nexport const HabitProvider = ({\n  children\n}) => {\n  _s();\n  const [habits, dispatch] = useReducer(habitReducer, []);\n  useEffect(() => {\n    const savedHabits = loadHabitsFromStorage();\n    dispatch({\n      type: 'LOAD_HABITS',\n      payload: savedHabits\n    });\n  }, []);\n  useEffect(() => {\n    saveHabitsToStorage(habits);\n  }, [habits]);\n  const addHabit = habitData => {\n    const newHabit = {\n      id: Date.now().toString(),\n      ...habitData,\n      createdAt: new Date().toISOString(),\n      completedDates: [],\n      streak: 0,\n      longestStreak: 0\n    };\n    dispatch({\n      type: 'ADD_HABIT',\n      payload: newHabit\n    });\n  };\n  const updateHabit = (id, habit) => {\n    dispatch({\n      type: 'UPDATE_HABIT',\n      payload: {\n        id,\n        habit\n      }\n    });\n  };\n  const deleteHabit = id => {\n    dispatch({\n      type: 'DELETE_HABIT',\n      payload: id\n    });\n  };\n  const toggleHabitCompletion = (id, date) => {\n    dispatch({\n      type: 'TOGGLE_COMPLETION',\n      payload: {\n        id,\n        date\n      }\n    });\n  };\n  const getHabitStats = id => {\n    const habit = habits.find(h => h.id === id);\n    if (!habit) {\n      return {\n        totalCompletions: 0,\n        currentStreak: 0,\n        longestStreak: 0,\n        completionRate: 0\n      };\n    }\n    const totalCompletions = habit.completedDates.length;\n    const completionRate = totalCompletions > 0 ? totalCompletions / 30 * 100 : 0; // 30 days as base\n\n    return {\n      totalCompletions,\n      currentStreak: habit.streak,\n      longestStreak: habit.longestStreak,\n      completionRate: Math.min(completionRate, 100)\n    };\n  };\n  const value = {\n    habits,\n    addHabit,\n    updateHabit,\n    deleteHabit,\n    toggleHabitCompletion,\n    getHabitStats\n  };\n  return /*#__PURE__*/_jsxDEV(HabitContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(HabitProvider, \"H0M8+PucLmrw2IwW7yBARQPNhTs=\");\n_c = HabitProvider;\nexport const useHabits = () => {\n  _s2();\n  const context = useContext(HabitContext);\n  if (context === undefined) {\n    throw new Error('useHabits must be used within a HabitProvider');\n  }\n  return context;\n};\n_s2(useHabits, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"HabitProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","saveHabitsToStorage","loadHabitsFromStorage","calculateStreak","jsxDEV","_jsxDEV","habitReducer","state","action","type","payload","map","habit","id","filter","completedDates","includes","date","streak","longestStreak","Math","max","HabitContext","undefined","HabitProvider","children","_s","habits","dispatch","savedHabits","addHabit","habitData","newHabit","Date","now","toString","createdAt","toISOString","updateHabit","deleteHabit","toggleHabitCompletion","getHabitStats","find","h","totalCompletions","currentStreak","completionRate","length","min","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useHabits","_s2","context","Error","$RefreshReg$"],"sources":["/Users/palimaracharan/Desktop/Habits_Tracker/src/context/HabitContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { Habit, HabitFormData, HabitContextType } from '../types';\nimport { saveHabitsToStorage, loadHabitsFromStorage } from '../utils/storage';\nimport { calculateStreak } from '../utils/dateUtils';\n\ntype HabitAction =\n  | { type: 'ADD_HABIT'; payload: Habit }\n  | { type: 'UPDATE_HABIT'; payload: { id: string; habit: Partial<Habit> } }\n  | { type: 'DELETE_HABIT'; payload: string }\n  | { type: 'TOGGLE_COMPLETION'; payload: { id: string; date: string } }\n  | { type: 'LOAD_HABITS'; payload: Habit[] };\n\nconst habitReducer = (state: Habit[], action: HabitAction): Habit[] => {\n  switch (action.type) {\n    case 'ADD_HABIT':\n      return [...state, action.payload];\n    \n    case 'UPDATE_HABIT':\n      return state.map(habit =>\n        habit.id === action.payload.id\n          ? { ...habit, ...action.payload.habit }\n          : habit\n      );\n    \n    case 'DELETE_HABIT':\n      return state.filter(habit => habit.id !== action.payload);\n    \n    case 'TOGGLE_COMPLETION':\n      return state.map(habit => {\n        if (habit.id === action.payload.id) {\n          const completedDates = habit.completedDates.includes(action.payload.date)\n            ? habit.completedDates.filter(date => date !== action.payload.date)\n            : [...habit.completedDates, action.payload.date];\n          \n          const streak = calculateStreak(completedDates);\n          const longestStreak = Math.max(habit.longestStreak, streak);\n          \n          return {\n            ...habit,\n            completedDates,\n            streak,\n            longestStreak,\n          };\n        }\n        return habit;\n      });\n    \n    case 'LOAD_HABITS':\n      return action.payload;\n    \n    default:\n      return state;\n  }\n};\n\nconst HabitContext = createContext<HabitContextType | undefined>(undefined);\n\nexport const HabitProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [habits, dispatch] = useReducer(habitReducer, []);\n\n  useEffect(() => {\n    const savedHabits = loadHabitsFromStorage();\n    dispatch({ type: 'LOAD_HABITS', payload: savedHabits });\n  }, []);\n\n  useEffect(() => {\n    saveHabitsToStorage(habits);\n  }, [habits]);\n\n  const addHabit = (habitData: HabitFormData) => {\n    const newHabit: Habit = {\n      id: Date.now().toString(),\n      ...habitData,\n      createdAt: new Date().toISOString(),\n      completedDates: [],\n      streak: 0,\n      longestStreak: 0,\n    };\n    dispatch({ type: 'ADD_HABIT', payload: newHabit });\n  };\n\n  const updateHabit = (id: string, habit: Partial<Habit>) => {\n    dispatch({ type: 'UPDATE_HABIT', payload: { id, habit } });\n  };\n\n  const deleteHabit = (id: string) => {\n    dispatch({ type: 'DELETE_HABIT', payload: id });\n  };\n\n  const toggleHabitCompletion = (id: string, date: string) => {\n    dispatch({ type: 'TOGGLE_COMPLETION', payload: { id, date } });\n  };\n\n  const getHabitStats = (id: string) => {\n    const habit = habits.find(h => h.id === id);\n    if (!habit) {\n      return {\n        totalCompletions: 0,\n        currentStreak: 0,\n        longestStreak: 0,\n        completionRate: 0,\n      };\n    }\n\n    const totalCompletions = habit.completedDates.length;\n    const completionRate = totalCompletions > 0 ? (totalCompletions / 30) * 100 : 0; // 30 days as base\n\n    return {\n      totalCompletions,\n      currentStreak: habit.streak,\n      longestStreak: habit.longestStreak,\n      completionRate: Math.min(completionRate, 100),\n    };\n  };\n\n  const value: HabitContextType = {\n    habits,\n    addHabit,\n    updateHabit,\n    deleteHabit,\n    toggleHabitCompletion,\n    getHabitStats,\n  };\n\n  return (\n    <HabitContext.Provider value={value}>\n      {children}\n    </HabitContext.Provider>\n  );\n};\n\nexport const useHabits = (): HabitContextType => {\n  const context = useContext(HabitContext);\n  if (context === undefined) {\n    throw new Error('useHabits must be used within a HabitProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}