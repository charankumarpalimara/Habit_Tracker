{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Async thunk for API operations (simulated for now)\nexport const fetchHabits = createAsyncThunk('habits/fetchHabits', async () => {\n  // Simulate API call\n  const storedHabits = localStorage.getItem('habits-tracker-data');\n  return storedHabits ? JSON.parse(storedHabits) : [];\n});\nexport const saveHabit = createAsyncThunk('habits/saveHabit', async habit => {\n  // Simulate API call\n  return habit;\n});\nexport const updateHabitAPI = createAsyncThunk('habits/updateHabit', async habit => {\n  // Simulate API call\n  return habit;\n});\nexport const deleteHabitAPI = createAsyncThunk('habits/deleteHabit', async habitId => {\n  // Simulate API call\n  return habitId;\n});\nconst habitSlice = createSlice({\n  name: 'habits',\n  initialState: {\n    habits: [],\n    loading: false,\n    error: null,\n    filters: {\n      category: 'all',\n      status: 'all',\n      search: ''\n    },\n    sortBy: 'createdAt',\n    sortOrder: 'desc'\n  },\n  reducers: {\n    addHabit: (state, action) => {\n      const newHabit = {\n        id: Date.now().toString(),\n        ...action.payload,\n        createdAt: new Date().toISOString(),\n        completedDates: [],\n        streak: 0,\n        longestStreak: 0\n      };\n      state.habits.push(newHabit);\n      localStorage.setItem('habits-tracker-data', JSON.stringify(state.habits));\n    },\n    updateHabit: (state, action) => {\n      const {\n        id,\n        updates\n      } = action.payload;\n      const index = state.habits.findIndex(habit => habit.id === id);\n      if (index !== -1) {\n        state.habits[index] = {\n          ...state.habits[index],\n          ...updates\n        };\n        localStorage.setItem('habits-tracker-data', JSON.stringify(state.habits));\n      }\n    },\n    deleteHabit: (state, action) => {\n      state.habits = state.habits.filter(habit => habit.id !== action.payload);\n      localStorage.setItem('habits-tracker-data', JSON.stringify(state.habits));\n    },\n    toggleHabitCompletion: (state, action) => {\n      const {\n        habitId,\n        date\n      } = action.payload;\n      const habit = state.habits.find(h => h.id === habitId);\n      if (habit) {\n        const isCompleted = habit.completedDates.includes(date);\n        if (isCompleted) {\n          habit.completedDates = habit.completedDates.filter(d => d !== date);\n        } else {\n          habit.completedDates.push(date);\n        }\n\n        // Recalculate streak\n        habit.streak = calculateStreak(habit.completedDates);\n        habit.longestStreak = Math.max(habit.longestStreak, habit.streak);\n        localStorage.setItem('habits-tracker-data', JSON.stringify(state.habits));\n      }\n    },\n    setFilter: (state, action) => {\n      state.filters = {\n        ...state.filters,\n        ...action.payload\n      };\n    },\n    setSort: (state, action) => {\n      state.sortBy = action.payload.sortBy;\n      state.sortOrder = action.payload.sortOrder;\n    },\n    clearFilters: state => {\n      state.filters = {\n        category: 'all',\n        status: 'all',\n        search: ''\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchHabits.pending, state => {\n      state.loading = true;\n    }).addCase(fetchHabits.fulfilled, (state, action) => {\n      state.loading = false;\n      state.habits = action.payload;\n    }).addCase(fetchHabits.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    });\n  }\n});\n\n// Helper function to calculate streak\nconst calculateStreak = completedDates => {\n  if (completedDates.length === 0) return 0;\n  const sortedDates = completedDates.sort().reverse();\n  const today = new Date().toISOString().split('T')[0];\n  let streak = 0;\n  let currentDate = new Date(today);\n  for (const dateStr of sortedDates) {\n    const date = new Date(dateStr);\n    const diffTime = currentDate.getTime() - date.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    if (diffDays <= 1) {\n      streak++;\n      currentDate = date;\n    } else {\n      break;\n    }\n  }\n  return streak;\n};\nexport const {\n  addHabit,\n  updateHabit,\n  deleteHabit,\n  toggleHabitCompletion,\n  setFilter,\n  setSort,\n  clearFilters\n} = habitSlice.actions;\nexport default habitSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchHabits","storedHabits","localStorage","getItem","JSON","parse","saveHabit","habit","updateHabitAPI","deleteHabitAPI","habitId","habitSlice","name","initialState","habits","loading","error","filters","category","status","search","sortBy","sortOrder","reducers","addHabit","state","action","newHabit","id","Date","now","toString","payload","createdAt","toISOString","completedDates","streak","longestStreak","push","setItem","stringify","updateHabit","updates","index","findIndex","deleteHabit","filter","toggleHabitCompletion","date","find","h","isCompleted","includes","d","calculateStreak","Math","max","setFilter","setSort","clearFilters","extraReducers","builder","addCase","pending","fulfilled","rejected","message","length","sortedDates","sort","reverse","today","split","currentDate","dateStr","diffTime","getTime","diffDays","ceil","actions","reducer"],"sources":["/Users/palimaracharan/Desktop/Habits_Tracker/src/store/habitSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Async thunk for API operations (simulated for now)\nexport const fetchHabits = createAsyncThunk(\n  'habits/fetchHabits',\n  async () => {\n    // Simulate API call\n    const storedHabits = localStorage.getItem('habits-tracker-data');\n    return storedHabits ? JSON.parse(storedHabits) : [];\n  }\n);\n\nexport const saveHabit = createAsyncThunk(\n  'habits/saveHabit',\n  async (habit) => {\n    // Simulate API call\n    return habit;\n  }\n);\n\nexport const updateHabitAPI = createAsyncThunk(\n  'habits/updateHabit',\n  async (habit) => {\n    // Simulate API call\n    return habit;\n  }\n);\n\nexport const deleteHabitAPI = createAsyncThunk(\n  'habits/deleteHabit',\n  async (habitId) => {\n    // Simulate API call\n    return habitId;\n  }\n);\n\nconst habitSlice = createSlice({\n  name: 'habits',\n  initialState: {\n    habits: [],\n    loading: false,\n    error: null,\n    filters: {\n      category: 'all',\n      status: 'all',\n      search: ''\n    },\n    sortBy: 'createdAt',\n    sortOrder: 'desc'\n  },\n  reducers: {\n    addHabit: (state, action) => {\n      const newHabit = {\n        id: Date.now().toString(),\n        ...action.payload,\n        createdAt: new Date().toISOString(),\n        completedDates: [],\n        streak: 0,\n        longestStreak: 0,\n      };\n      state.habits.push(newHabit);\n      localStorage.setItem('habits-tracker-data', JSON.stringify(state.habits));\n    },\n    \n    updateHabit: (state, action) => {\n      const { id, updates } = action.payload;\n      const index = state.habits.findIndex(habit => habit.id === id);\n      if (index !== -1) {\n        state.habits[index] = { ...state.habits[index], ...updates };\n        localStorage.setItem('habits-tracker-data', JSON.stringify(state.habits));\n      }\n    },\n    \n    deleteHabit: (state, action) => {\n      state.habits = state.habits.filter(habit => habit.id !== action.payload);\n      localStorage.setItem('habits-tracker-data', JSON.stringify(state.habits));\n    },\n    \n    toggleHabitCompletion: (state, action) => {\n      const { habitId, date } = action.payload;\n      const habit = state.habits.find(h => h.id === habitId);\n      \n      if (habit) {\n        const isCompleted = habit.completedDates.includes(date);\n        \n        if (isCompleted) {\n          habit.completedDates = habit.completedDates.filter(d => d !== date);\n        } else {\n          habit.completedDates.push(date);\n        }\n        \n        // Recalculate streak\n        habit.streak = calculateStreak(habit.completedDates);\n        habit.longestStreak = Math.max(habit.longestStreak, habit.streak);\n        \n        localStorage.setItem('habits-tracker-data', JSON.stringify(state.habits));\n      }\n    },\n    \n    setFilter: (state, action) => {\n      state.filters = { ...state.filters, ...action.payload };\n    },\n    \n    setSort: (state, action) => {\n      state.sortBy = action.payload.sortBy;\n      state.sortOrder = action.payload.sortOrder;\n    },\n    \n    clearFilters: (state) => {\n      state.filters = {\n        category: 'all',\n        status: 'all',\n        search: ''\n      };\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchHabits.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(fetchHabits.fulfilled, (state, action) => {\n        state.loading = false;\n        state.habits = action.payload;\n      })\n      .addCase(fetchHabits.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message;\n      });\n  }\n});\n\n// Helper function to calculate streak\nconst calculateStreak = (completedDates) => {\n  if (completedDates.length === 0) return 0;\n\n  const sortedDates = completedDates.sort().reverse();\n  const today = new Date().toISOString().split('T')[0];\n  let streak = 0;\n  let currentDate = new Date(today);\n\n  for (const dateStr of sortedDates) {\n    const date = new Date(dateStr);\n    const diffTime = currentDate.getTime() - date.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n    if (diffDays <= 1) {\n      streak++;\n      currentDate = date;\n    } else {\n      break;\n    }\n  }\n\n  return streak;\n};\n\nexport const { \n  addHabit, \n  updateHabit, \n  deleteHabit, \n  toggleHabitCompletion,\n  setFilter,\n  setSort,\n  clearFilters\n} = habitSlice.actions;\n\nexport default habitSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}